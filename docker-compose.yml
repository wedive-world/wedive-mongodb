version: '3.8'

services: 
  mongo:
    image: mongo:latest
    container_name: mongodb
    # ports:
    #   - "4100:27017"
    volumes: 
      - /root/data:/data/db
    env_file:
      - mongo-config.env
    restart: always
    networks:
      - mongo-network
    command: mongod --replSet replication
  
  mongo-replica-1:
    image: mongo:latest
    container_name: mongodb-replica-1
    # ports:
    #   - "4101:27017"
    volumes: 
      - /root/data_replica_1:/data/db
    env_file:
      - mongo-config.env
    restart: always
    networks:
      - mongo-network
    command: mongod --replSet replication
      
  mongo-replica-2:
    image: mongo:latest
    container_name: mongodb-replica-2
    # ports:
    #   - "4102:27017"
    volumes: 
      - /root/data_replica_2:/data/db
    env_file:
      - mongo-config.env
    restart: always
    networks:
      - mongo-network
    command: mongod --replSet replication

  mongo-replica-setup:
    container_name: mongo-replica-setup
    image: mongo-replica-setup
    build:
      context: replica
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - mongo-replica-1
      - mongo-replica-2
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    env_file: 
      - mongo-express-secret.env
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      # - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      # - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      # - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
      # - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - "4200:8081"
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - mongo-network

  example-db-backup:
    container_name: backup-agent
    image: tiredofit/db-backup
    env_file: 
      - db-backup-config.env
    volumes:
      - /root/backups:/backup
    restart: always
    networks:
      - mongo-network

networks:
  mongo-network:
    driver: bridge
    name: mongo-network